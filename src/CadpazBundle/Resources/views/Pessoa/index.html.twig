{% extends "::base.html.twig" %}

{% block title %}CadpazBundle:Pessoa:index{% endblock %}
{% block stylesheets %}
    {% stylesheets '@CadpazBundle/Resources/public/css/*' filter='cssrewrite' %}
        <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}

{% block body %}
<h1>Welcome to the Pessoa:index page</h1>

<div id="container">
<form id="form2" class="form-wrapper2 cf" action="{{ path('pessoa_busca') }}">
        <input id="nome" class="saida" name="nome" type="text" placeholder="Pesquisar Nome..." required>
        <button id="botaoBuscar">Pesquisar</button>
    </form> 
        
    <form id="form1" class="form-wrapper cf" action="{{ path('pessoa_busca') }}">
        <input id="cpf" class="saida" name="cpf" type="text" placeholder="Pesquisar CPF..." required>
        <button id="botaoValidarCPF">Pesquisar</button>
    </form> 
<div id="saida"></div>

<br />

<table id="example" class="example" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Data de Nascimento</th>
                <th>Email</th>
                <th>CPF</th>
            </tr>
        </thead>
 
    </table>
</div>

<<<<<<< HEAD
=======


>>>>>>> maskedinput
{% endblock %}
{% block javascripts %}
    {% javascripts '@CadpazBundle/Resources/public/js/*' %}
        <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', {'callback': 'fos.Router.setData'}) }}"></script>
    <script src="https://cdn.datatables.net/1.10.8/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript">
        // prepare the form when the DOM is ready 
        $(document).ready(function() {
            
           
            
            jQuery(function($){
                $("#cpf").mask("999.999.999-99",{placeholder:"___.___.___-__"});
             });
            
            


            
            
            var options = { 
                //target:        '#saida',   // target element(s) to be updated with server response 
                beforeSubmit:  showRequest,  // pre-submit callback 
                success:       showResponse,  // post-submit callback 

                // other available options: 
                //url:       Routing.generate('pessoa_busca', {id: '11111111111'})         // override for form's 'action' attribute 
                type:      'post',        // 'get' or 'post', override for form's 'method' attribute 
                dataType:  'json'        // 'xml', 'script', or 'json' (expected server response type) 
                //clearForm: true        // clear all form fields after successful submit 
                //resetForm: true        // reset the form after successful submit 

                // $.ajax options can be used here too, for example: 
                //timeout:   3000 
            }; 

            // bind form using 'ajaxForm' 
            $('#form1').ajaxForm(options); 
        }); 
        
        function showRequest(formData, jqForm, options)
        {
            var text = $.param(formData); 
            
            text = text.replace(".", "");
            text = text.replace(".", "");
            text = text.replace("-", "");
            text = text.replace("cpf=", "");
            //alert(text);
        }
        
        
        function itemToTr(item)
        {
            
        }
        
        // post-submit callback 
        function showResponse(responseText, statusText, xhr, $form)  { 
            ok(responseText);
        }
        function ok(responseText){
            // for normal html responses, the first argument to the success callback 
            // is the XMLHttpRequest object's responseText property 

            // if the ajaxForm method was passed an Options Object with the dataType 
            // property set to 'xml' then the first argument to the success callback 
            // is the XMLHttpRequest object's responseXML property 

            // if the ajaxForm method was passed an Options Object with the dataType 
            // property set to 'json' then the first argument to the success callback 
            // is the json data object returned by the server 

            //alert('status: ' + statusText + '\n\nresponseText: \n' + responseText + 
            //    '\n\nThe output div should have already been updated with the responseText.'); 
        
        
        /*
            if (statusText!='success') {
                $("#saida").html('Nenhum registro encontrado');
                alert('Nenhum registro encontrado');
                return;
            }*/
        
            
                $('#example').css('visibility','hidden');
                $('#example').html('<thead><tr><th>Nome</th><th>Data de Nascimento</th><th>Email</th><th>CPF</th></tr></thead>');
                var item = $.parseJSON(responseText);
                
                
<<<<<<< HEAD
                var date = new Date(item.data_nascimento)
                
                
                var trHTML = '';
                trHTML += '<tr><td><a href=\"' + Routing.generate('pessoa_view', {id: item.id}) + '\">' + item.nome + '</a></td><td>' + date.getDay()+'/'+(date.getMonth()+2)+'/'+date.getYear() + '</td><td>' + item.email + '</td><td>' + item.cpf + '</td></tr>';
                
                $('#example').append(trHTML);
                $('#example').css('visibility','visible');

=======
                if ($.isArray(item))
                {
                    for (i=0; i<item.length; i++)
                    {
                        var trHTML = '';
                        trHTML += '<tr><td><a href=\"' + Routing.generate('pessoa_view', {id: item[i].id}) + '\">' + item[i].nome + '</a></td><td>' + item[i].data_nascimento + '</td><td>' + item[i].email + '</td><td>' + item[i].cpf + '</td></tr>';

                        $('#example').append(trHTML);
                        $('#example').css('visibility','visible');
                    }
                }
                else
                {
                    var trHTML = '';
                    trHTML += '<tr><td><a href=\"' + Routing.generate('pessoa_view', {id: item.id}) + '\">' + item.nome + '</a></td><td>' + item.data_nascimento + '</td><td>' + item.email + '</td><td>' + item.cpf + '</td></tr>';

                    $('#example').append(trHTML);
                    $('#example').css('visibility','visible');
                }
>>>>>>> maskedinput
            
                            $('#example tr').click(function() {
                var href = $(this).find("a").attr("href");
                if(href) {
                    window.location = href;
                    //alert(href);
                }
            });
        } 
    </script>
    
    
    <script type="text/javascript">
    $('#form2').keyup(function(event) {

        

        if (event.which == 27 || event.which == 13)
        {
            event.preventDefault();
            return;
        }

       var searchText = $("#nome").val();
      if (searchText.length < 5) return;

        $.ajax({url: Routing.generate('pessoa_busca'), data: {'nome':searchText}, success: showResponse, type: 'post'});
   });
    </script>

    
    <script type="text/javascript">
    /*var CPF = new CPF();
    document.getElementById('cpf').mas
document.getElementById('botaoValidarCPF').onclick = function(){
    document.getElementById('saida').innerHTML = CPF.valida(document.getElementById('cpf').value);
};*/

/*
$( "#form1" ).submit(function( event ) {
    var inputtedPhoneNumber = $( "#cpf" ).val();
 
 
 
    // If the phone number doesn't match the regex
    if ( !isCPF( inputtedPhoneNumber ) ) {
 
        $("#saida").html('CPF Inv√°lido!');
        event.preventDefault();
    } else {
 
        // Run $.ajax() here
    }
});*/
    </script>
{% endblock %}
